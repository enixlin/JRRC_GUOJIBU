假如我们的controller里面引用了service，并且spring的配置文件初始化时扫描了全部的实例包括springmvc的controller并初始化，接着，springmvc容器初始化时，就会将spring容器中的controller实例覆盖掉。这个时候就会出错了，新的controller实例中的service就会出现找不到实例的情况。
 
所以解决方法是，2个容器扫描的包必须相互区分，互不干扰。spring容器扫描非controller的实例，而springmvc容器扫描controller的实例就行。



MyBatis/Ibatis中#和$的区别
1. #将传入的数据都当成一个字符串，会对自动传入的数据加一个双引号。如：order by #user_id#，如果传入的值是111,
       那么解析成sql时的值为order by "111", 如果传入的值是id，则解析成的sql为order by "id".
 
2. $将传入的数据直接显示生成在sql中。如：order by $user_id$，如果传入的值是111,那么解析成sql时的值为order by user_id, 
        如果传入的值是id，则解析成的sql为order by id.
 
3. #方式能够很大程度防止sql注入。
 
4.$方式无法防止Sql注入。
 
5.$方式一般用于传入数据库对象，例如传入表名. 
 
6.一般能用#的就别用$. 

ps:在使用mybatis中还遇到<![CDATA[]]>的用法，在该符号内的语句，将不会被当成字符串来处理，而是直接当成sql语句，
比如要执行一个存储过程。